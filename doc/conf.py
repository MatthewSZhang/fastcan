# fastcan documentation build configuration file, created by
# `sphinx-quickstart doc` on Mon Dec 11 14:00:01 2023.
#
# This file is execfile()d with the current directory set to its containing
# dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.

import importlib.metadata
from datetime import datetime

from sphinx_gallery.notebook import add_code_cell

# General information about the project.
project = "fastcan"
copyright = f"2024 - {datetime.now().year}, fastcan developers (MIT License)"

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#

# The full version, including alpha/beta/rc tags.
release = importlib.metadata.version(project)

# The short X.Y version.
version = ".".join(release.split(".")[:2])

# -- General configuration ---------------------------------------------------
# https://www.sphinx-doc.org/en/master/usage/configuration.html#general-configuration

extensions = [
    "sphinx.ext.doctest",
    # Core Sphinx library for auto html doc generation from docstrings
    "sphinx.ext.autodoc",
    # Create neat summary tables for modules/classes/methods etc
    "sphinx.ext.autosummary",
    # Support for NumPy and Google style docstrings
    "sphinx.ext.napoleon",
    # Link to other project's documentation (see mapping below)
    "sphinx.ext.intersphinx",
    "sphinx_gallery.gen_gallery",
    # For dropdown directive
    "sphinx_design",
    # For PlantUML diagrams
    "sphinxcontrib.plantuml",
    # For interactive examples via JupyterLite
    "jupyterlite_sphinx",
]

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = ["_build"]

# Hide class prefix in right sidebar.
toc_object_entries_show_parents = "hide"

# Add any paths that contain templates here, relative to this directory.
templates_path = ["templates"]

# generate autosummary even if no references
autosummary_generate = True
autosummary_ignore_module_all = False

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = "sphinx"


# -- Options for HTML output -------------------------------------------------
# https://www.sphinx-doc.org/en/master/usage/configuration.html#options-for-html-output
html_theme = "pydata_sphinx_theme"
html_static_path = ["images", "css"]
html_css_files = ["fastcan.css"]


# intersphinx configuration
intersphinx_mapping = {
    "sklearn": ("https://scikit-learn.org/stable", None),
}

# -----------------------------------------------------------------------------
# Interactive documentation examples via JupyterLite
# -----------------------------------------------------------------------------

global_enable_try_examples = True
try_examples_global_button_text = "Try it in your browser!"
try_examples_global_warning_text = (
    "If you encounter any issues, please report them on the"
    " [fastcan issue tracker](https://github.com/scikit-learn-contrib/fastcan/issues)."
)


def notebook_modification_function(notebook_content, notebook_filename):
    notebook_content_str = str(notebook_content)
    dummy_notebook_content = {"cells": []}
    code_lines = []

    if "fetch_" in notebook_content_str:
        code_lines.extend(
            [
                "import pyodide_http",
                "pyodide_http.patch_all()",
            ]
        )
    # always import matplotlib and pandas to avoid Pyodide limitation with
    # imports inside functions
    code_lines.extend(
        [
            "import matplotlib",
            "import pandas",
        ]
    )

    if code_lines:
        code_lines = ["# JupyterLite-specific code"] + code_lines
        code = "\n".join(code_lines)
        add_code_cell(dummy_notebook_content, code)

    notebook_content["cells"] = (
        dummy_notebook_content["cells"] + notebook_content["cells"]
    )


# -----------------------------------------------------------------------------
suppress_warnings = [
    # Ignore new warning in Sphinx 7.3.0 while pickling environment:
    #   WARNING: cannot cache unpickable configuration value: 'sphinx_gallery_conf'
    "config.cache",
]
sphinx_gallery_conf = {
    "examples_dirs": ["../examples"],
    "gallery_dirs": ["auto_examples"],
    "jupyterlite": {"notebook_modification_function": notebook_modification_function},
}
