@startuml fastcan
skinparam backgroundColor transparent
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml
!include <logos/numpy>
!include <logos/python>
!include <logos/c>


AddContainerTag("module", $legendText="module")
AddContainerTag("db", $legendText="input/output", $sprite="numpy", $bgColor="gray", $fontColor="white", $borderColor="gray")
AddComponentTag("python", $legendText="Python code", $sprite="python")
AddComponentTag("cython", $legendText="Cython code", $sprite="c", $bgColor="gold", $fontColor="brown", $borderColor="gold")
UpdateContainerBoundaryStyle($type="module", $legendText="module boundary")


Container_Boundary(fastcan, "fastcan", $descr="A library for fast feature engineering and data preprocessing"){
    Component(cancorr_fast, "cancorr_fast", $tags="cython", $descr="Fast canonical correlation based forward search")
    Component(FastCan, "FastCan", $tags="python", $descr="Feature selector")
    Component(minibatch, "minibatch", $tags="python", $descr="Prunes samples in batch-wise")
    Component(refine, "refine", $tags="python", $descr="Refines selection of FastCan")


    Rel(FastCan, cancorr_fast, "Sends features to", "arrays")
    Rel(minibatch, cancorr_fast, "Sends samples to", "arrays")
    Rel(FastCan, refine, "Sends selected features to", "arrays")
    Rel(refine, cancorr_fast, "Sends features to", "arrays")
}

Container_Boundary(narx, "narx", $descr="A submodule for NARX modelling"){
    Component(make_narx, "make_narx", $tags="python", $descr="Builder for NARX model instances")
    Component(narx_fast, "narx_fast", $tags="cython", $descr="Fast computation of gradient and prediction for NARX models")
    Component(NARX, "NARX", $tags="python", $descr="NARX model")
    Component(time_shift, "time_shift", $tags="python", $descr="Transforming time-series to time-shifted features")
    Component(poly, "poly", $tags="python", $descr="Nonlinearises features with polynomial basis functions")
    ' Component(tp2fd, "tp2fd", $tags="python", $descr="Converts time_shift ids and poly ids to feat ids and delay ids")
    Component(print_narx, "print_narx", $tags="python", $descr="Prints NARX model summary")

    Rel(NARX, print_narx, "Sends NARX model to", "NARX model")
    ' Rel(make_narx, poly, "Makes polynomial features using", "unique id numbers")
    Rel(make_narx, time_shift, "Sends time series to", "arrays")
    ' Rel(make_narx, tp2fd, "Sends time_shift ids and poly ids to", "unique id numbers")
    Rel(time_shift, poly, "Sends time-shifted features to", "arrays")
    Rel(poly, FastCan, "Sends polynomial features to", "arrays")
    ' Rel(tp2fd, NARX, "Sends feat ids and delay ids to", "unique id numbers")
    Rel(NARX, narx_fast, "Sends initial conditions of inputs, prediction and gradients to", "fit, predict")

}

Person(person, "User", $descr="A data scientist or developer using NumPy, SciPy, and scikit-learn")
ContainerDb(output, "fastcan output", $tags="db", $techn="indices", $descr="Selected indices of features or samples")
ContainerDb(input, "fastcan input", $tags="db", $techn="arrays, allow multi-output", $descr="Input data")
ContainerDb(narx_output, "narx output", $tags="db", $techn="arrays", $descr="Prediction and gradients of NARX model")
ContainerDb(narx_input, "narx input", $tags="db", $techn="arrays, allow nan, allow multi-output", $descr="Time-series data")

Rel(input, FastCan, "Sends features to", "arrays")
Rel(input, minibatch, "Sends samples to", "arrays")
Rel(narx_input, make_narx, "Sends time series to", "arrays")
Rel(narx_input, NARX, "Sends time series to", "arrays")

Rel(cancorr_fast, output, "Sends selected indices to", "indices")
Rel(output, refine, "Sends selected indices to", "indices")
Rel(narx_fast, narx_output, "Sends prediction and gradients to", "arrays")
Rel(output, NARX, "Sends selected polynomial features to", "indices")

Rel(person, input, "Processes arrays using", "NumPy, scikit-learn pipeline")
Rel(person, narx_input, "Processes time series using", "NumPy, scikit-learn pipeline")

Container(optimizer, "SciPy Optimiser", "module", $tags="module", $descr="Minimises objective functions using prediction errors and gradients")
Rel(narx_output, optimizer, "Sends prediction and gradients to", "arrays")
Rel(optimizer, NARX, "Updates coefficients for", "arrays")

SHOW_LEGEND()
@enduml