[project]
name = "fastcan"
version = "0.4.1"
description = "A fast canonical-correlation-based greedy search algorithm"
authors = [
    { name = "Matthew Sikai Zhang", email = "matthew.szhang91@gmail.com" },
]
requires-python = ">=3.10"
readme = "README.rst"
license = { file = "LICENSE" }

dependencies = ["scikit-learn>=1.7.0,!=1.7.1"]

classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: Unix",
    "Operating System :: MacOS",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
]

[project.urls]
homepage = "https://fastcan.readthedocs.io/en/latest/"
source = "https://github.com/scikit-learn-contrib/fastcan"
download = "https://pypi.org/project/fastcan/#files"
tracker = "https://github.com/scikit-learn-contrib/fastcan/issues"

[build-system]
requires = ["meson-python>=0.18.0", "Cython>=3.1.0", "scikit-learn>=1.7.0"]
build-backend = "mesonpy"

# Needed on Windows CI to compile with Visual Studio compiler
# otherwise Meson detects a MINGW64 platform and use MINGW64
# toolchain
[tool.meson-python.args]
setup = ['--vsenv']

[tool.pytest.ini_options]
testpaths = [ 
    "./tests",
    "./fastcan/narx/tests",
]

[tool.coverage.run]
omit = ["**/tests/*"]

[tool.codespell]
skip = [
    "./doc/_build",
    "./doc/auto_examples",
    "./doc/generated",
    "./htmlcov",
    "./build",
    "./pixi.lock",
    "./asv_benchmarks/env",
    "./asv_benchmarks/html",
    "./asv_benchmarks/results",
    "./asv_benchmarks/benchmarks/cache",
    "./emsdk",
]
ignore-words-list = [
    "MIS", # magnetic impedance spectroscopy (MIS)
]

[tool.ruff]
line-length = 88

exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "doc/_build",
    "doc/auto_examples",
    "asv_benchmarks/env",
    "asv_benchmarks/html",
    "asv_benchmarks/results",
    "asv_benchmarks/benchmarks/cache",
]

[tool.ruff.lint]
# This enables us to use CPY001: copyright header check
preview = true
# This enables us to use the explicit preview rules that we want only
explicit-preview-rules = true
# all rules can be found here: https://docs.astral.sh/ruff/rules/
extend-select = ["E501", "W", "I", "CPY001", "PGH", "RUF"]
ignore = [
    # do not assign a lambda expression, use a def
    "E731",
    # do not use variables named 'l', 'O', or 'I'
    "E741",
    # E721 gives many false positives.
    # Use `is` and `is not` for type comparisons, or `isinstance()` for
    # isinstance checks
    "E721",
    # We don't care much about F841.
    # Local variable ... is assigned to but never used
    "F841",
    # some RUF rules trigger too many changes
    "RUF002",
    "RUF003",
    "RUF005",
    "RUF012",
    "RUF015",
    "RUF021",
    # https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
    "W191",
    "E111",
    "E114",
    "E117",
    "D206",
    "D300",
    "Q000",
    "Q001",
    "Q002",
    "Q003",
    "COM812",
    "COM819",
]

[tool.ruff.lint.flake8-copyright]
notice-rgx = "\\#\\ Authors:\\ The\\ fastcan\\ developers\\\r?\\\n\\#\\ SPDX\\-License\\-Identifier:\\ MIT"

[tool.ruff.lint.per-file-ignores]
# It's fine not to put the import at the top of the file in the examples
# folder.
"examples/*" = ["E402"]
"doc/conf.py" = ["E402"]
"**/tests/*" = ["CPY001"]
"doc/*" = ["CPY001"]
".github/*" = ["CPY001"]
"asv_benchmarks/*" = ["CPY001", "TID252"]

[tool.cython-lint]
# Ignore the same error codes as ruff
# + E501 (line too long) because keeping it < 88 in cython
# often makes code less readable.
ignore = [
    # multiple spaces/tab after comma
    'E24',
    # line too long
    'E501',
    # do not assign a lambda expression, use a def
    'E731',
    # do not use variables named 'l', 'O', or 'I'
    'E741',
    # line break before binary operator
    'W503',
    # line break after binary operator
    'W504',
]
