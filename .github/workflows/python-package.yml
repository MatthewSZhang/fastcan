# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  release:
    types: [published]

jobs:
  linux-build:
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64
    strategy:
      fail-fast: false
      matrix:
        environment: [py39, py310, py311, py312]
    steps:
    - uses: actions/checkout@v4
    - uses: prefix-dev/setup-pixi@v0.8.1
      with:
        environments: ${{ matrix.environment }}

    - name: Lint with ruff
      run: |
        pixi run -e ${{ matrix.environment }} lint
    - name: Test with pytest
      run: |
        pixi run -e ${{ matrix.environment }} test
    - name: Test with doctest
      shell: bash
      run: |
        CMD=doctest pixi run -e ${{ matrix.environment }} doc
    - name: Build package
      run: |
        pixi run -e ${{ matrix.environment }} build-wheel
    - name: Upload package
      uses: actions/upload-artifact@v4
      with:
        name: build-ubuntu-latest-${{ strategy.job-index }}
        path: dist/*.whl

  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-12, macos-14]
        environment: [py39, py310, py311, py312]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
    - uses: prefix-dev/setup-pixi@v0.8.1
      with:
        environments: ${{ matrix.environment }}

    - name: Lint with ruff
      run: |
        pixi run -e ${{ matrix.environment }} lint
    - name: Test with pytest
      run: |
        pixi run -e ${{ matrix.environment }} test
    - name: Test with doctest
      shell: bash
      run: |
        CMD=doctest pixi run -e ${{ matrix.environment }} doc
    - name: Build package
      run: |
        pixi run -e ${{ matrix.environment }} build-wheel
    - name: Upload package
      uses: actions/upload-artifact@v4
      with:
        name: build-${{ matrix.os }}-${{ strategy.job-index }}
        path: dist/*.whl

  publish:
    runs-on: ubuntu-latest
    needs: [build, linux-build]
    permissions:
      id-token: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/
          merge-multiple: true

      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
