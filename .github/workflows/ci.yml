name: CI

on:
  workflow_call:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: prefix-dev/setup-pixi@v0.8.1
      with:
        environments: default
        cache: true

    - name: Re-install local
      run: |
        pixi run rebuild

    - name: Lint with ruff
      run: |
        pixi run lint
    - name: Lint with cython-lint
      run: |
        pixi run cython-lint
    - name: Format with black
      run: |
        pixi run fmt
    - name: Type check with mypy
      run: |
        pixi run type
    - name: Test with pytest
      run: |
        pixi run test
    - name: Test with doctest
      shell: bash
      run: |
        pixi run doc
        CMD=doctest pixi run doc
    - name: Test coverage
      shell: bash
      run: |
        FMT=xml pixi run test-coverage
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4.5.0
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
    - name: Build SDist
      run: |
        pixi run build-sdist
    - name: Store artifacts
      uses: actions/upload-artifact@v4
      with:
        name: cibw-sdist
        path: dist/*.tar.gz


  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    needs: test
    steps:
    - uses: actions/checkout@v4
    - name: Build wheels
      uses: pypa/cibuildwheel@v2.21.3
      env:
          CIBW_BUILD: cp3*-*
          CIBW_SKIP: pp* *i686* *musllinux* *-macosx_universal2 *-manylinux_ppc64le *-manylinux_s390x
          CIBW_PROJECT_REQUIRES_PYTHON: ">=3.9"
          CIBW_ARCHS_LINUX: auto64
          CIBW_ARCHS_MACOS: x86_64 arm64
          CIBW_ARCHS_WINDOWS: auto64
          CIBW_BEFORE_ALL_LINUX: yum install -y ninja-build python3-devel
          CIBW_BEFORE_ALL_WINDOWS: choco install ninja
          CIBW_BEFORE_ALL_MACOS: brew install ninja
          # Needed on Windows CI to compile with Visual Studio compiler
          # otherwise Meson detects a MINGW64 platform and use MINGW64
          # toolchain
          CIBW_CONFIG_SETTINGS_WINDOWS: "setup-args=--vsenv"
    - name: Upload package
      uses: actions/upload-artifact@v4
      with:
        name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
        path: ./wheelhouse/*.whl
